Domain|Name|Title|Description|DefaultValue|Rationale|Remarks|Implementation|Kind|ParentReq|ValSet|Owner|UpdatedAt|Status|Project|Application
ApAST|1|Application Start-Up Procedure||No default provided at framework level|||Implementation of \texttt{CrFwAppStartUpProc.h}. Only a test stub is provided as default at framework level.|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApAST|2|Application Reset Procedure||No default provided at framework level|||Implementation of \texttt{CrFwAppResetProc.h}. Only a test stub is provided as default at framework level.|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApAST|3|Application Shutdown Procedure||No default provided at framework level|||Implementation of \texttt{CrFwAppShutdownProc.h}. Only a test stub is provided as default at framework level.|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApAST|4|State Machine Embedded in state START\_UP of Application State Machine||No state machine embedded in state START\_UP|||\texttt{\#DEFINE} constant in \texttt{CrFwAppSmUserPar.h}|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApAST|5|State Machine Embedded in state NORMAL of Application State Machine||No state machine embedded in state NORMAL|||\texttt{\#DEFINE} constant in \texttt{CrFwAppSmUserPar.h}|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApAST|6|State Machine Embedded in state RESET of Application State Machine||No state machine embedded in state RESET|||\texttt{\#DEFINE} constant in \texttt{CrFwAppSmUserPar.h}|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApAST|7|State Machine Embedded in state SHUTDOWN of Application State Machine||No state machine embedded in state SHUTDOWN|||\texttt{\#DEFINE} constant in \texttt{CrFwAppSmUserPar.h}|SPC|AST:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApBAS|1|Initialization Check in Initialization Procedure of Base Component||Always returns: 'check successful'|||The Base Component is not available for direct use by application developers. This Adaptation Point is therefore not directly supported by the C2 Implementation but, where required, is supported by components which are derived from the Base Component.|SPC|BAS:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApBAS|2|Initialization Action in Initialization Procedure of Base Component||Do nothing and return: 'action successful'|||The Base Component is not available for direct use by application developers. This Adaptation Point is therefore not directly supported by the C2 Implementation but, where required, is supported by components which are derived from the Base Component.|SPC|BAS:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApBAS|3|Configuration Check in Reset Procedure of Base Component||Always returns: 'check successful'|||The Base Component is not available for direct use by application developers. This Adaptation Point is therefore not directly supported by the C2 Implementation but, where required, is supported by components which are derived from the Base Component.|SPC|BAS:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApBAS|4|Configuration Action in Reset Procedure of Base Component||Do nothing and return: 'action successful'|||The Base Component is not available for direct use by application developers. This Adaptation Point is therefore not directly supported by the C2 Implementation but, where required, is supported by components which are derived from the Base Component.|SPC|BAS:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApBAS|5|Shutdown Action of Base Component||Do nothing|||The Base Component is not available for direct use by application developers. This Adaptation Point is therefore not directly supported by the C2 Implementation but, where required, is supported by components which are derived from the Base Component.|SPC|BAS:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApBAS|6|Execution Procedure of Base Component||Do the same dummy action (return without doing anything) whenever the procedure is executed|||The Base Component is not available for direct use by application developers. This Adaptation Point is therefore not directly supported by the C2 Implementation but, where required, is supported by components which are derived from the Base Component.|SPC|BAS:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApFAC|1|\texttt{Make} Operation to dynamically instantiate a component||No default provided at framework level|||The only components which can be instantiated dynamically are report and command components. Their \texttt{make} operations are implemented in full (see \texttt{CrFwInFactoryMake*} and \texttt{CrFwOutFactoryMakeOutCmp} functions). This adaptation point is therefore closed by the C2 Implementation.|SPC|FAC:5|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApFAC|2|\texttt{Release} Operation to dynamically release a component||No default provided at framework level|||The only components which can be released  dynamically are report and command components. Their \texttt{release} operations are implemented in full (see \texttt{CrFwInFactoryRelease*} and \texttt{CrFwOutFactoryReleaseOutCmp} functions). This adaptation point is therefore closed by the C2 Implementation.|SPC|FAC:5|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|01|Initialization Check in Initialization Procedure of InCommand||Returns “check successful' if information for initializing InCommand using data in incoming packet is valid|||This Adaptation Point is closed in the C2 Implementation because InCommands are provided by the InFactory in the CONFIGURED state  (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|ICM:3|Default|pasetti|24-05-2021 23:09|NEW|CordetFw|CrFw
ApICM|02|Initialization Action in Initialization Procedure of InCommand||Use information in incoming packet to initialize InCommand and return “action successful'|||This Adaptation Point is closed in the C2 Implementation because InCommands are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|ICM:3|Default|pasetti|24-05-2021 23:10|NEW|CordetFw|CrFw
ApICM|03|Configuration Check in Reset Procedure of InCommand||Returns “check successful' if information carried by packet is valid|||This Adaptation Point is closed in the C2 Implementation because InCommands are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|ICM:3|Default|pasetti|24-05-2021 23:10|NEW|CordetFw|CrFw
ApICM|04|Configuration Action in Reset Procedure of InCommand||Use information in incoming packet to configure InCommand and return “action successful'|||This Adaptation Point is closed in the C2 Implementation because InCommands are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|ICM:3|Default|pasetti|24-05-2021 23:10|NEW|CordetFw|CrFw
ApICM|05|Shutdown Action of InCommand (closes BAS-5)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|ICM:3|Default|pasetti|24-05-2021 23:10|NEW|CordetFw|CrFw
ApICM|06|Execution Procedure of InCommand (closes BAS-6)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|ICM:3|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApICM|07|Ready Check of InCommand||Return “command is ready'|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation is provided by function \texttt{CrFwSmCheckAlwaysTrue}.|SPC|ICM:3|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApICM|08|Start Action of InCommand||Set action outcome to “success'|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation is provided by function \texttt{CrFwSmEmptyAction}.|SPC|ICM:3|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApICM|09|Progress Action of InCommand||Set action outcome to “completed'|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation is provided by function \texttt{CrFwSmEmptyAction}.|SPC|ICM:3|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApICM|10|Termination Action of InCommand||Set action outcome to “success'|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation is provided by function \texttt{CrFwSmEmptyAction}.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|11|Abort Action of InCommand||Do nothing|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation is provided by function \texttt{CrFwSmEmptyAction}.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|12|Operation to Report Start Failed for InCommand||Generate command acknowledge report CMD\_ACK\_STR\_FAIL with command's identifier and with identifier of reason of failure as parameters.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|13|Operation to Report Start Successful for InCommand||Generate command acknowledge report CMD\_ACK\_STR\_SUCC with command's identifier as parameter.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|14|Operation to Report Progress Failed for InCommand||Generate command acknowledge report CMD\_ACK\_PRG\_FAIL with command's identifier, progress step and with identifier of reason of failure as parameters.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|15|Operation to Report Progress Successful for InCommand||Generate command acknowledge report CMD\_ACK\_PRG\_SUCC with command's identifier and progress step as parameters.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|16|Operation to Report Termination Failed for InCommand||Generate command acknowledge report CMD\_ACK\_TRM\_FAIL with command's identifier and with identifier of reason of failure as parameters.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|17|Operation to Report Report Termination Successful for InCommand||Generate command acknowledge report CMD\_ACK\_TRM\_FAIL with command's identifier as parameter.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|18|Service Type Attribute of InCommand||No default provided at framework level|||Implemented by Adaptation Point C2-IFA-4.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|19|Command Sub-Type Attribute of InCommand||No default provided at framework level|||Implemented by Adaptation Point C2-IFA-4.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|20|Discriminant Attribute of InCommand||Default value is: “no discriminant'|||Implemented by Adaptation Point C2-IFA-4.|SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApICM|21|Parameter Attributes of InCommand||Default value is: “no parameters'|||This Adaptation Point is implemented indirectly: applications must extend InCommands and must define the range of parameters for each kind of InCommand and the operations to get their values. |SPC|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|01|Initialization Check in Initialization Procedure of InLoader (closes BAS-1)||Return “check successful' iff the sizes of the LIM is a positive integer|||This Adaptation Point is closed at framework level.|SPC|ILD:2|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApILD|02|Initialization Action in Initialization Procedure of InLoader (closes BAS-2)||Allocate resources for the LIM and return “Action Successful' iff the allocation succeeds|||This Adaptation Point is closed at framework level.|SPC|ILD:2|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApILD|03|Configuration Check in Reset Procedure of InLoader (closes BAS-3)||Returns “check successful' if: (a) the information to update (or initialize) the content of the LIM is valid; and (b) the information to re-route packets is valid.|||This Adaptation Point is closed at framework level.|SPC|ILD:2|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApILD|04|Configuration Action in Reset Procedure of InLoader (closes BAS-4)||(a) update (or initialize) content of LIM; and (b) update (or initialize) packet re-routing information.|||This Adaptation Point is closed at framework level.|SPC|ILD:2|Default|pasetti|24-05-2021 23:11|NEW|CordetFw|CrFw
ApILD|05|Shutdown Action of InLoader (closes BAS-5)||Same as in Base Component.|||This Adaptation Point is closed at framework level.|SPC|ILD:2|Default|pasetti|24-05-2021 23:12|NEW|CordetFw|CrFw
ApILD|06|Execution Procedure of InLoader (closes BAS-6)||Implemented as InLoader Execution Procedure.|||This Adaptation Point is closed at framework level.|SPC|ILD:2|Default|pasetti|24-05-2021 23:12|NEW|CordetFw|CrFw
ApILD|07|Size of List of InManagers in InLoader||Default size is 2.|||The InLoader of the C2 Implementation does not explicitly define a List of InManager. This Adaptation Point is subsumed in the Adaptation Point for the selection of InManager (C2-ILD-TBD)|SPC|ILD:2|Default|pasetti|24-05-2021 23:12|NEW|CordetFw|CrFw
ApILD|08|Content of List of InManagers in InLoader||No default provided at framework level.|||The InLoader of the C2 Implementation does not explicitly define a List of InManager. It only defines the function to return the InManager where the InReport or InCommand must be loaded (see C2-ILD-2).|SPC|ILD:2|Default|pasetti|24-05-2021 23:12|NEW|CordetFw|CrFw
ApILD|09|Operation to Determine Re-Routing Destination of Packets||Re0routing destination is set to the destination of the incoming packet.|||Function pointer in \texttt{CrFwInLoaderUserPar.h}. Default implementation is provided \texttt{CrFwInLoader.h}.|SPC|ILD:2|Default|pasetti|24-05-2021 23:12|NEW|CordetFw|CrFw
ApILD|10|Operation to Get Packet Destination||No default provided at framework level.|||Implemented by Adaptation Point C2-PCK-1.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|11|Operation to Check Packet Destination Validity||Always returns “destination is valid'.|||The check of the destination validity is performed by the function which returns the re-routing destination.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|12|Operation to Report Packet Destination Invalid ||Generate error report INLOADER\_INV\_DEST with the destination identifier as a parameter|||Implemented by Adaptation Point C2-ERR-1.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|13|Operation to Get Packet Type||No default provided at framework level|||Implemented by Adaptation Point C2-PCK-1.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|14|Operation to Report Acceptance Failure||For InCommands: generate command acknowledge report CMD\_ACK\_ACC\_FAIL with command's identifier and with identifier of reason of failure as parameters.. For InReports: generate error report INLOADER\_ACC\_FAIL with report's identifier and with identifier of reason of acceptance failure as parameters.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|15|Operation to Report Acceptance Success||Generate command acknowledge report CMD\_ACK\_ACC\_SUCC with command's identifier as parameter.|||Implemented by Adaptation Point C2-ACK-1.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|16|Operation to Deserialize Packet||No default provided at framework level.|||Packets are not deserialized in the C2 Implementation. Instead, the packet itself is attached to the component encapsulating the incoming report or command. This adaptation point is closed in the C2 Implementation.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|17|Operation to Select InManager where Incoming Report or Command is Loaded||For InCommands, select first InManager in LIM; for InReport, select second InManager in LIM.|||Function pointer in \texttt{CrFwInLoaderUserPar.h}. Default implementation is provided \texttt{CrFwInLoader.h}.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApILD|18|Operation to Check Packet Type Validity||No default provided at framework level|||This check is implemented in function \textit{CrFwInFactoryMakeInCmd} for incoming command and in function \textit{CrFwInFactoryMakeInRep} for incoming report. These functions check that the type is supported by the application.|SPC|ILD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|1|Size of PCRL of InManager||Default size is 1.|||\texttt{\#DEFINE} constants (one for each InManager) in \texttt{CrFwInManagerUserPar.h}|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|2|Initialization Check in Initialization Procedure of InManager (closes BAS-1)||Returns “check successful' if the size of the PCRL has been set to a positive integer value.|||This Adaptation Point is closed at framework level.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|3|Initialization Action in Initialization Procedure of InManager (closes BAS-2)||Allocate resources for PCRL and return “Action Successful' iff the allocation succeeds|||This Adaptation Point is closed at framework level.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|4|Configuration Check in Reset Procedure of InManager (closes BAS-3)||Same as in Base Component|||This Adaptation Point is closed at framework level.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|5|Configuration Action in Reset Procedure of InManager (closes BAS-4)||Release all InCommands and InReports in the PCRL; reset the counter of successfully loaded InCommands and InReports; reset the PCRL; and return “Action Successful'|||This Adaptation Point is closed at framework level.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|6|Shutdown Action of InManager (closes BAS-5)||Release all InCommands and InReports in the PCRL; reset the PCRL;|||This Adaptation Point is closed at framework level.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|7|Execution Procedure of InManager (closes BAS-6)||Implemented as InManager Execution Procedure.|||This Adaptation Point is closed at framework level.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIMG|8|Operation to Report PCRL of InManager Full||Generate INMANAGER\_PCRL\_FULL Error Report|||Implemented by Adaptation Point C2-ERR-1.|SPC|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|1|Maximum Number of Trackable InCommands/InReports in InRegistry||Default value is 1.|||\texttt{\#DEFINE} constant in \texttt{CrFwInRegistryUserPar.h}|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|2|Initialization Check in Initialization Procedure of InRegistry (closes BAS-1)||Returns “check successful' if the maximum number of trackable InCommands/InReports has been set to a positive integer value.|||This Adaptation Point is closed at framework level.|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|3|Initialization Action in Initialization Procedure of InRegistry (closes BAS-2)||Allocate the resources for tracking the commands and reports and returns: “action successful' if the allocation succeeds or “action failed' if the allocation fails.|||This Adaptation Point is closed at framework level.|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|4|Configuration Check in Reset Procedure of InRegistry (closes BAS-3)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|5|Configuration Action in Reset Procedure  (closes BAS-4)||Clear all information about tracked InCommands and InReports; return: “action successful'.|||This Adaptation Point is closed at framework level.|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|6|Shutdown Action of InRegistry (closes BAS-5)||Clear all information about tracked InCommands and InReports.|||This Adaptation Point is closed at framework level.|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRG|7|Execution Procedure of InRegistry (closes BAS-6)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|IRG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRP|01|Initialization Check in Initialization Procedure of InReport||Returns “check successful' if information for initializing InReport using data in incoming packet is valid|||This Adaptation Point is closed by the C2 Implementation because InReports are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|IRP:2|Default|pasetti|24-05-2021 23:12|NEW|CordetFw|CrFw
ApIRP|02|Initialization Action in Initialization Procedure of InReport||Use information in incoming packet to initialize InReport and return “action successful'|||This Adaptation Point is closed by the C2 Implementation because InReports are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|03|Configuration Check in Reset Procedure of InReport||Returns “check successful' if information for configuring InReport using data in incoming packet is valid|||This Adaptation Point is closed by the C2 Implementation because InReports are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|04|Configuration Action in Reset Procedure of InReport||Use information in incoming packet to configure InReport and return “action successful'|||This Adaptation Point is closed by the C2 Implementation because InReports are provided by the InFactory in the CONFIGURED state (but a validity check is provided in C2-ICM-1 to implement the acceptance check).|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|05|Shutdown Action of InReport (closes BAS-5)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|06|Execution Procedure of InReport (closes BAS-6)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|07|Update Action of InReport||Do nothing|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation is provided at framework level.|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|08|Service Type Attribute of InReport||No default provided at framework level|||Implemented by Adaptation Point C2-IFA-3.|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|09|Sub-Type Attribute of InReport||No default provided at framework level|||Implemented by Adaptation Point C2-IFA-3.|SPC|IRP:2|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIRP|10|Discriminant Attribute of InReport||Default value is: “no discriminant'|||Implemented by Adaptation Point C2-IFA-3.|SPC|IRP:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIRP|11|Parameter Attribute of InReport||Default value is: “no parameters'|||This Adaptation Point is implemented indirectly: applications must extend InCommands and must define the range of parameters for each kind of InCommand and the operations to get their values. |SPC|IRP:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIST|01|Size of the Packet Queue in InStream||Default size is 1|||\texttt{\#DEFINE} constant (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}|SPC|IST:4|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIST|02|Initialization Check in Initialization Procedure of InStream||Returns 'check successful' if the size of the Packet Queue has been set to a positive integer|||Function pointers (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}. Default implementation is provided in \texttt{CrFwInStream.h}.|SPC|IST:4|Default|pasetti|24-05-2021 23:13|NEW|CordetFw|CrFw
ApIST|03|Initialization Action in Initialization Procedure of InStream||Allocate resources for Packet Queue and return 'Action Successful' iff the allocation succeeds|||Function pointers (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}. Default implementation is provided in \texttt{CrFwInStream.h}.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|04|Configuration Action in Reset Procedure of InStream||Reset the Packet Queue and return 'Action Successful'|||Function pointers (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}. Default implementation is provided in \texttt{CrFwInStream.h}.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|05|Shutdown Action of InStream||Reset the Packet Queue|||Function pointers (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}. Default implementation is provided in \texttt{CrFwInStream.h}.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|06|Execution Procedure of InStream (closes BAS-6)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|07|Operation to Get Packet Source from Incoming Packet||No value defined at framework level|||Implemented by Adaptation Point C2-PCK-1.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|08|Operation to Get Packet Sequence Counter from Incoming Packet||No value defined at framework level|||Implemented by Adaptation Point C2-PCK-1.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|09|Operation to Report Sequence Counter Error||Generate INSTREAM\_SC\_ERR Error Report with expected and actual sequence counter values|||Implemented by Adaptation Point C2-ERR-1.|SPC|IST:4|Default|pasetti|24-05-2021 23:14|NEW|CordetFw|CrFw
ApIST|10|Operation to Report Packet Queue Full||Generate INSTREAM\_PQ\_FULL Error Report |||Implemented by Adaptation Point C2-ERR-1.|SPC|IST:4|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIST|11|Packet Collect Operation for InStream||No default defined at framework level|||Function pointers (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}. Only a test stub is provided as default at framework level.|SPC|IST:4|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApIST|12|Packet Available Check Operation for InStream||No default defined at framework level|||Function pointers (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}. Only a test stub is provided as default at framework level.|SPC|IST:4|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|01|Initialization Check in Initialization Procedure of OutComponent||Same value as in Base Component|||OutComponents are provided by the OutFactory in the CONFIGURED state and cannot therefore be initialized and configured by the user. This adaptation point is closed in the C2 Implementation.|SPC|OCM:3|Default|pasetti|24-05-2021 23:09|NEW|CordetFw|CrFw
ApOCM|02|Initialization Action in Initialization Procedure of OutComponent||Same value as in Base Component|||OutComponents are provided by the OutFactory in the CONFIGURED state and cannot therefore be initialized and configured by the user. This adaptation point is closed in the C2 Implementation.|SPC|OCM:3|Default|pasetti|24-05-2021 23:09|NEW|CordetFw|CrFw
ApOCM|03|Configuration Check in Reset Procedure of OutComponent||Same value as in Base Component|||OutComponents are provided by the OutFactory in the CONFIGURED state and cannot therefore be initialized and configured by the user. This adaptation point is closed in the C2 Implementation.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|04|Configuration Action in Reset Procedure of OutComponent||Same value as in Base Component|||OutComponents are provided by the OutFactory in the CONFIGURED state and cannot therefore be initialized and configured by the user. This adaptation point is closed in the C2 Implementation.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|05|Shutdown Action in Base Component of OutComponent||Same value as in Base Component|||OutComponents are provided by the OutFactory in the CONFIGURED state and are not intended to be ever shut down. This adaptation point is closed in the C2 Implementation.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|06|Execution Procedure of OutComponent (closes BAS-6)||Same value as in Base Component|||The OutComponents are not intended to be ever executed. This adaptation point is closed in the C2 Implementation.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|07|Service Type Attribute of OutComponent||No default provided at framework level|||This Adaptation Point is implemented by adaptation point OFA-2.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|08|Command/Report Sub-Type Attribute of OutComponent||No default provided at framework level|||This Adaptation Point is implemented by adaptation point OFA-2.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|09|Destination Attribute of OutComponent||No default provided at framework level|||This Adaptation Point is implemented by adaptation point OFA-2.|SPC|OCM:3|Default|pasetti|24-05-2021 23:15|NEW|CordetFw|CrFw
ApOCM|10|Acknowledge Level Attribute of OutComponent||Default value is: 'no acknowledge required' (only relevant for OutCommands)|||This Adaptation Point is implemented by adaptation point C2-PCK-1.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|11|Discriminant Attribute of OutComponent||Default value is: 'no discriminant'|||This Adaptation Point is implemented by adaptation point OFA-2.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|12|Parameter Attribute of OutComponent||Default value is: 'no parameters'|||This Adaptation Point is implemented indirectly: applications must extend OutComponents and must define the range of parameters for each OutComponent and the operations to set their values. |SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|13|Enable Check Operation of OutComponent||Query the OutRegistry for the enable status of the command or report encapsulated in the OutComponent and set value of isEnable accordingly|||\texttt{\#DEFINE} constants (one for each kind of OutComponent in the application) in \texttt{CrFwOutFactoryUserPar.h} define the pointer to the function implementing the operation. A default is provided a framework level.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|14|Ready Check Operation of OutComponent||Set value of isReady flag to true|||\texttt{\#DEFINE} constants (one for each kind of OutComponent in the application) in \texttt{CrFwOutFactoryUserPar.h} define the pointer to the function implementing the operation. A default is provided a framework level.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|15|Repeat Check Operation of OutComponent||Return “No Repeat”|||\texttt{\#DEFINE} constants (one for each kind of OutComponent in the application) in \texttt{CrFwOutFactoryUserPar.h} define the pointer to the function implementing the operation. A default is provided a framework level.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|16|Update Action of OutComponent||Set Time Stamp of OutComponent to current time|||\texttt{\#DEFINE} constants (one for each kind of OutComponent in the application) in \texttt{CrFwOutFactoryUserPar.h} define the pointer to the function implementing the operation. A default is provided a framework level.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|17|Serialize Operation of OutComponent||No default defined at framework level|||\texttt{\#DEFINE} constants (one for each kind of OutComponent in the application) in \texttt{CrFwOutFactoryUserPar.h} define the pointer to the function implementing the operation. A default is provided a framework level.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOCM|18|Operation to Report Invalid Destination of an OutComponent||Generate SNDPCKT\_INV\_DEST Error Report with invalid destination as a parameter|||Implemented by Adaptation Point C2-ERR-1.|SPC|OCM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|1|Initialization Check in Initialization Procedure of OutLoader||Returns 'check successful' if the size of the LOM (List of OutManagers) has been set to a positive integer value.|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which always returns 'check successful' is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|2|Initialization Action in Initialization Procedure  of OutLoader||Allocate resources for LOM and return 'Action Successful' iff the allocation succeeds|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which takes no action is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|3|Configuration Check in Reset Procedure of OutLoader||Returns 'check successful' iff all the information is available to update (or initialize) the value of the LOM.|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which always returns 'check successful' is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|4|Configuration Action in Reset Procedure of OutLoader||Update (or initialize) the LOM and return 'Action Successful'|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which takes no action is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|5|Shutdown Action of OutLoader||Same as in Base Component.|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which takes no action is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|6|Execution Procedure of OutLoader (closes BAS-6)||Same as in Base Component.|||This Adaptation Point is closed at framework level.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|7|OutManager Selection Operation||Select the first OutManager in the LOM|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which always returns the first OutManager in the LOM is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|8|OutManager Activation Operation||Do nothing|||Function pointer in \texttt{CrFwOutLoaderUserPar.h}. Default implementation which takes no action is provided in \texttt{CrFwOutLoader.h}.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOLD|9|Operation to set Set Time-Stamp in Outgoing Packets||No value defined at framework level|||Implemented by Adaptation Point C2-PCK-1.|SPC|OLD:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|1|Size of POCL of OutManager||Default size is 1.|||\texttt{\#DEFINE} constants (one for each OutManager) in \texttt{CrFwOutManagerUserPar.h}|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|2|Initialization Check in Initialization Procedure of OutManager (closes BAS-1)||Returns 'check successful' if the size of the POCL has been set to a positive integer value.|||This Adaptation Point is closed at framework level.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|3|Initialization Action in Initialization Procedure of OutManager (closes BAS-2)||Allocate resources for POCL and return 'Action Successful' iff the allocation succeeds|||This Adaptation Point is closed at framework level.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|4|Configuration Check in Reset Procedure of OutManager (closes BAS-3)||Same as in Base Component|||This Adaptation Point is closed at framework level.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|5|Configuration Action in Reset Procedure  (closes BAS-4)||Release all OutComponents in the POCL; reset the POCL; reset the counter of successfully loaded OutComponents; and return 'Action Successful'|||This Adaptation Point is closed at framework level.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|6|Shutdown Action in Base Component of OutManager (closes BAS-5)||Release all OutComponents in the POCL; reset the POCL|||This Adaptation Point is closed at framework level.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|7|Execution Procedure in Base Component of OutManager (closes BAS-6)||Implemented as procedure of Manager Execution Procedure|||This Adaptation Point is closed at framework level.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOMG|8|Operation to Report POCL of OutManager Full||Generate OUTMANAGER\_POCL\_FULL Error Report|||Implemented by Adaptation Point C2-ERR-1.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|1|Maximum Number of Trackable Commands/Reports for OutRegistry||Default value is 1.|||\texttt{\#DEFINE} constant in \texttt{CrFwOutRegistryUserPar.h} defines types, sub-types and range of discriminant values supported by application.|SPC|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|2|Initialization Check in Initialization Procedure of OutRegistry (closes BAS-1)||Returns 'check successful' if the maximum number of trackable commands/reports has been set to a positive integer value.|||This Adaptation Point is closed at framework level.|SPC|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|3|Initialization Action in Initialization Procedure of OutRegistry (closes BAS-2)||Allocate the resources for tracking the commands and reports and returns: 'action successful' if the allocation succeeds or 'action failed' if the allocation fails.|||This Adaptation Point is closed at framework level.|SPC|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|4|Configuration Check in Reset Procedure of OutRegistry (closes BAS-3)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|5|Configuration Action in Reset Procedure of OutRegistry (closes BAS-4)||Set the enable state for all kinds of commands and reports to: 'enabled'; clear all information about tracked commands and reports; and return: 'action successful'.|||This Adaptation Point is closed at framework level.|SPC|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|6|Shutdown Action of OutRegistry (closes BAS-5)||Set the enable state for all kinds of commands and reports to: 'enabled'; clear all information about tracked commands and reports.|||This Adaptation Point is closed at framework level.|SPC|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApORG|7|Execution Procedure of OutRegistry (closes BAS-6)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|1|Initialization Check in Initialization Procedure of OutStreamRegistry||Same value as in Base Component|||In the C2 Implementation, the OutStreamRegistry is not implemented as a separate component (it is merged with the OutStream). This adaptation point is closed in the C2 Implementation.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|2|Initialization Action in Initialization Procedure of OutStreamRegistry||Same value as in Base Component|||In the C2 Implementation, the OutStreamRegistry is not implemented as a separate component (it is merged with the OutStream). This adaptation point is closed in the C2 Implementation.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|3|Configuration Check in  Reset Procedure of OutStreamRegistry||Returns 'check successful' if the information to set up the link between the packet destinations and the OutStreams is available.|||In the C2 Implementation, the OutStreamRegistry is not implemented as a separate component (it is merged with the OutStream). This adaptation point is closed in the C2 Implementation.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|4|Configuration Action in Reset Procedure of OutStreamRegistry||Set up and configure the link between the packet destinations and the OutStreams.|||In the C2 Implementation, the OutStreamRegistry is not implemented as a separate component (it is merged with the OutStream). This adaptation point is closed in the C2 Implementation.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|5|Shutdown Action  of OutStreamRegistry (closes BAS-5)||Same value as in Base Component|||In the C2 Implementation, the OutStreamRegistry is not implemented as a separate component (it is merged with the OutStream). This adaptation point is closed in the C2 Implementation.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|6|Execution Procedure of OutStreamRegistry (closes BAS-6)||Same value as in Base Component|||In the C2 Implementation, the OutStreamRegistry is not implemented as a separate component (it is merged with the OutStream). This adaptation point is closed in the C2 Implementation.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOSR|7|Get OutStream Operation of OutStreamRegistry||No default provided at framework level|||\texttt{\#DEFINE} constants (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h} define the destination associated to each OutStream.|SPC|OSR:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOST|01|Packet Queue Size for OutStream||No value defined at framework level|||\texttt{\#DEFINE} constant (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|02|Initialization Check in Initialization Procedure of OutStream||Returns 'check successful' if the size of the Packet Queue has been set to a positive integer|||Function pointers (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}. Default implementation is provided in \texttt{CrFwOutStream.h}..|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|03|Initialization Action in Initialization Procedure of OutStream||Allocate resources for Packet Queue and return 'Action Successful' iff the allocation succeeds|||Function pointers (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}. Default implementation is provided in \texttt{CrFwOutStream.h}..|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|04|Configuration Check in Initialization Procedure of OutStream||Same value as in Base Component|||Function pointers (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}. Default implementation is provided in \texttt{CrFwOutStream.h}..|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|05|Configuration Action in Reset Procedure of OutStream||Reset the Packet Queue and return 'Action Successful'|||Function pointers (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}. Default implementation is provided in \texttt{CrFwOutStream.h}..|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|06|Shutdown Action of OutStream||Reset the Packet Queue|||Function pointers (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}. Default implementation is provided in \texttt{CrFwOutStream.h}..|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|07|Execution Procedure of OutStream (closes BAS-6)||Same value as in Base Component|||This Adaptation Point is closed at framework level.|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|08|Packet Hand-Over Operation of OutStream||No value defined at framework level|||Function pointers (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}. Only a test stub is provided as default at framework level.|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|09|Operation to set Sequence Counter in Outgoing Packets||No value defined at framework level|||Implemented by Adaptation Point C2-PCK-1.|SPC|OST:05|Default|pasetti|24-05-2021 23:16|NEW|CordetFw|CrFw
ApOST|12|Operation to Report Packet Queue Full||Generate OUTSTREAM\_PQ\_FULL Error Report|||Implemented by Adaptation Point C2-ERR-1.|SPC|OST:05|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
ApOST|13|Operation to Compute and Set a Packet’s CRC||Set CRC to 0xFFFF|||Implementation of function \texttt{CrFwComputeAndSetCrc} in interface \texttt{CrFwPckt.h}. Only a test stub is provided by default at framework level.|SPC|OST:05|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-CST|1|Identifier of Host Application||0|||\texttt{\#DEFINE} constant in \texttt{CrFwUserConstants.h}.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-CST|2|Range of Service Type, Sub-Type and Discriminants for InCommands and InReports||0|||\texttt{\#DEFINE} constants in \texttt{CrFwUserConstants.h}|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-ERR|1|Operations to Report Errors Values of Command and Report Attributes in a Packet||0|||Implementation of \texttt{CrFwRepErr.h}. Only a test stub is provided as default at framework level.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-ICM|1|Validity Check for InCommand||0|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation which verifies correctness of CRC is provided by function \texttt{CrFwInCmdDefValidityCheck}.|IMP|ICM:3|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IFA|1|InFactory Capacity for InReports||0|||\texttt{\#DEFINE} constant in \texttt{CrFwInFactoryUserPar.h} defines maximum number of InReports which can be allocated by the factory.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IFA|2|InFactory Capacity for InCommands||0|||\texttt{\#DEFINE} constant in \texttt{CrFwInFactoryUserPar.h} defines maximum number of InCommands which can be allocated by the factory.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IFA|3|InReport Kinds ||0|||\texttt{\#DEFINE} constants in \texttt{CrFwInFactoryUserPar.h} define the kinds of InReports supported by the application. An InReport kind is defined through its service type, command or report sub-type, and discriminant value. For each supported InReport kind, function pointers are defined implementing the InReport checks and actions.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IFA|4|InCommand Kinds ||0|||\texttt{\#DEFINE} constants in \texttt{CrFwInFactoryUserPar.h} define the kinds of InCommands supported by the application. An InCommand kind is defined through its service type, command or report sub-type, and discriminant value. For each supported InCommand kind, function pointers are defined implementing the InCommand checks and actions.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IMG|1|Number of InManagers in Application||0|||\texttt{\#DEFINE} constants in \texttt{CrFwInManagerUserPar.h}|IMP|IMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IRP|1|Validity Check for InReport||0|||Function pointer in \texttt{CrFwInFactoryUserPar.h}. Default implementation which verifies correctness of CRC is provided by function \texttt{CrFwInRepDefValidityCheck}.|IMP|IRP:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IST|1|Number of InStreams in the Application||0|||\texttt{\#DEFINE} constant in \texttt{CrFwInStreamUserPar.h}|IMP|IST:4|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-IST|3|Source associated to InStream||0|||\texttt{\#DEFINE} constant (one for each InStream in the application) in \texttt{CrFwInStreamUserPar.h}|IMP|IST:4|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-OFA|1|OutFactory Capacity ||0|||\texttt{\#DEFINE} constant in \texttt{CrFwOutFactoryUserPar.h} defines maximum number of OutComponents which can be allocated by the factory.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-OFA|2|OutComponent Kinds ||0|||\texttt{\#DEFINE} constants in \texttt{CrFwOutFactoryUserPar.h} define the kinds of OutComponents supported by the application. An OutComponent kind is defined through its service type, command or report sub-type, and discriminant value. For each supported OutComponent kind, function pointers are defined implementing the OutComponent checks and actions. |IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-OMG|1|Number of OutManagers in Application||0|||\texttt{\#DEFINE} constants in \texttt{CrFwOutManagerUserPar.h}|IMP|OMG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-ORG|2|Number of Service Types/Sub-Types supported by Application||0|||\texttt{\#DEFINE} constant in \texttt{CrFwOutRegistryUserPar.h} defines types, sub-types and range of discriminant values supported by application.|IMP|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-ORG|3|Range of Services supported by Application||0|||\texttt{\#DEFINE} constant in \texttt{CrFwOutRegistryUserPar.h} defines types, sub-types and range of discriminant values supported by application.|IMP|ORG:2|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-OST|1|Number of OutStreams in the Application||0|||\texttt{\#DEFINE} constant in \texttt{CrFwOutStreamUserPar.h}|IMP|OST:05|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-OST|3|Destination associated to OutStream||0|||\texttt{\#DEFINE} constant (one for each OutStream in the application) in \texttt{CrFwOutStreamUserPar.h}|IMP|OST:05|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-PCK|1|Operations to Report the Outcome of the Processing and Execution of an Incoming Command||0|||Implementation of \texttt{CrFwRepInCmdOutcome.h}. Only a test stub is provided as default at framework level.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-TIM|1|Operations to Get the Current Time||0|||Implementation of \texttt{CrFwTime.h}. Only a test stub is provided as default at framework level.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
C2-TYP|1|Definition of Primitive Types||0|||Definition of \texttt{typedef}.values in \texttt{CrFwUserConstants.h}. Default values are pre-defined in this header file.|IMP|None|Default|pasetti|24-05-2021 23:06|NEW|CordetFw|CrFw
